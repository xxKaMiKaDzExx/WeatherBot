from aiogram import Bot, Dispatcher
from aiogram.types import KeyboardButtonPollType, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram import  F, types



import requests
import asyncio



bot = Bot(token='YOUR TOKEN BOT')
dp = Dispatcher()



###################################################################################################
# –ö–õ–ê–í–ò–ê–¢–£–†–´
###################################################################################################



inline_start_msg_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∞ ‚úâÔ∏è', callback_data='message_weather')],
    [InlineKeyboardButton(text='‚ùì –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö ‚ùì', callback_data='link')],
    [InlineKeyboardButton(text='‚öôÔ∏è –î–æ–ø. –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ‚öôÔ∏è', callback_data='dp')],
    [InlineKeyboardButton(text='üåé –°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ üåé', callback_data='popular')]
])

inline_information_weather_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üåá –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã üåá', callback_data='dop_info')],
    [InlineKeyboardButton(text='üëî –ß—Ç–æ –Ω–∞–¥–µ—Ç—å –Ω–∞ —É–ª–∏—Ü—É?  üëî', callback_data='cloth_info')]
])


subscription_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", callback_data="daily")],
    [InlineKeyboardButton(text="–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", callback_data="weekly")],
    [InlineKeyboardButton(text="–†–∞–∑ –≤ –º–µ—Å—è—Ü", callback_data="monthly")],
    [InlineKeyboardButton(text="–¢–µ—Å—Ç (—Ä–∞–∑ –≤ 1 –º–∏–Ω—É—Ç—É)", callback_data="test")]
])

most_popular_city_kb = ReplyKeyboardMarkup(keyboard=[
    [
        KeyboardButton(text='–ú–æ—Å–∫–≤–∞'),
        KeyboardButton(text='–ú–∏–Ω—Å–∫'),
        KeyboardButton(text='–ü–∏—Ç–µ—Ä'),
        KeyboardButton(text='–ë–µ—Ä–ª–∏–Ω')
    ],
    [
        KeyboardButton(text='–ê—Ñ–∏–Ω—ã'),
        KeyboardButton(text='–ü–∞—Ä–∏–∂'),
        KeyboardButton(text='–õ–æ–Ω–¥–æ–Ω'),
        KeyboardButton(text='–°—Ç–∞–º–±—É–ª')
    ],
    [
        KeyboardButton(text='–õ–∏—Å—Å–∞–±–æ–Ω'),
        KeyboardButton(text='–ú–∞–¥—Ä–∏–¥')
    ]
], resize_keyboard=True, one_time_keyboard=True)

###################################################################################################
# –û–°–ù–û–í–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ
###################################################################################################



class WeatherState(StatesGroup):
    city = State()
    temperature = State()
    temperature_feels = State()
    wind_speed = State()
    cloud_cover = State()
    humidity = State()




@dp.message(CommandStart())
async def start_command(message: Message):
    await message.answer(f'<b>–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —Ç–µ–±—è {message.from_user.first_name} üëã</b>\n\n<em>–Ø</em> - <b>–±–æ—Ç-–ø—Ä–æ–≥–Ω–æ–∑—á–∏–∫</b> –ø–æ–≥–æ–¥—ã.\n–ú–æ–≥—É —Å—Ç–∞—Ç—å —Ç–≤–æ–∏–º –ª–∏—á–Ω—ã–º <em>–∞–Ω–∞–ª–∏—Ç–∏–∫–æ–º</em> –ø–æ–≥–æ–¥—ã!\n–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à —É–∑–Ω–∞—Ç—å <b>–ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã</b> –≤ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö <em>—Ç–æ—á–∫–∞—Ö –ø–ª–∞–Ω–µ—Ç—ã</em>! –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã <b>–Ω–∞—á–∞—Ç—å</b> - <em>–≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ!</em>', parse_mode="HTML", reply_markup=inline_start_msg_kb)
    
    



@dp.message(F.text)
async def get_weather(message: types.Message, state: FSMContext):
    city = message.text
    try:
        url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&units=metric&lang=ru&appid=79d1ca96933b0328e1c7e3e7a26cb347'
        weather_data = requests.get(url).json()

        temperature = weather_data['main']['temp']
        temperature_feels = weather_data['main']['feels_like']
        wind_speed = weather_data['wind']['speed']
        cloud_cover = weather_data['weather'][0]['description']
        humidity = weather_data['main']['humidity']

      
        await state.update_data(city=city)
        await state.update_data(temperature=temperature)
        await state.update_data(temperature_feels=temperature_feels)
        await state.update_data(wind_speed=wind_speed)
        await state.update_data(cloud_cover=cloud_cover)
        await state.update_data(humidity=humidity)

        # await message.answer(f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}¬∞C\n'
        #                      f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}¬∞C\n'
        #                      f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n'
        #                      f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover}\n'
        #                      f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%')
        await message.reply(f'<em>{message.from_user.first_name}</em>, –¥–∞–Ω–Ω—ã–µ –æ –≥–æ—Ä–æ–¥–µ <b>{city}</b> –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω—ã ‚úÖ.\n\n'
                            f'<b>üì© –ò—Ç–æ–≥–æ –∫—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ –ø–æ–≥–æ–¥–µ üì©</b>\n'
                            f'<b>üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}¬∞C üå°</b>\n'
                            f'<b>üö∂‚Äç‚ôÇÔ∏è –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}¬∞C üö∂‚Äç‚ôÇÔ∏è</b>\n\n'
                            f'<em>–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Å–≤–æ–¥–∫–∏ –∏ –ø–æ–≥–æ–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫ –Ω–∏–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –∫–Ω–æ–ø–∫–∞–º:</em>', parse_mode='HTML', reply_markup=inline_information_weather_kb)
        

        
    except KeyError:
        await message.reply(f'<b>{message.from_user.first_name}</b>, –∫ —Å–æ–∂–µ–ª–µ–Ω–∏—é –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ—Ä–æ–¥–µ {city} ‚ùå.\n\n'
                             f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ <b>–æ—à–∏–±–∫–∞</b> –∏ –º—ã <em>–Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏</em> –≥–æ—Ä–æ–¥ <b>{city}</b>, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ <b>–µ—â–µ —Ä–∞–∑</b> –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è!', parse_mode="HTML")
    

                    

        


@dp.callback_query(F.data == 'dop_info')
async def dop_info_weather_callback(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    city = data.get('city')
    temperature = data.get('temperature')
    temperature_feels = data.get('temperature_feels')
    wind_speed = data.get('wind_speed')
    cloud_cover = data.get('cloud_cover')
    humidity = data.get('humidity')

    await callback.answer('')
    await callback.message.reply(f'<em>–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–≤–æ–¥–∫—É –ø–æ–≥–æ–¥—ã –±—ã–ª —É—Å–ø–µ—à–µ–Ω ‚úÖ.</em>\n\n'
                            f'<b>üì© –ò—Ç–æ–≥–æ–≤–∞—è –ø–æ–ª–Ω–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ –ø–æ–≥–æ–¥–µ –≤ –≥–æ—Ä–æ–¥–µ {city} üì©</b>\n\n'
                            f'<b>üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}¬∞C üå°</b>\n'
                            f'<b>üö∂‚Äç‚ôÇÔ∏è –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}¬∞C üö∂‚Äç‚ôÇÔ∏è</b>\n'
                            f'<b>üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed}–º/c üí®</b>\n'
                            f'<b>‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} ‚òÅÔ∏è</b>\n'
                            f'<b>‚òîÔ∏è –ü—Ä–æ—Ü–µ–Ω—Ç –≤–ª–∞–∂–Ω–æ—Å—Ç–∏: {humidity}% ‚òîÔ∏è</b>\n', parse_mode='HTML')
    
    

@dp.callback_query(F.data == 'cloth_info')
async def cloth_info_callback(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    temperature = data.get('temperature')
    await callback.answer('')
    if temperature >= 20:
        await callback.message.reply(f'<em>–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ.</em>\n\n'
                                    f'<b>–ù–∞ —É–ª–∏—Ü–µ –¥–æ–≤–æ–ª—å–Ω–æ –∂–∞—Ä–∫–æ, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±–æ–π—Ç–∏—Å—å —Ñ—É—Ç–±–æ–ª–∫–æ–π –∏ —à–æ—Ä—Ç–∞–º–∏ –∏ –∫–µ–ø–∫–æ–π.</b>'
                                    f'<b>–ó–∞–ø–∞—Å–∞–π—Ç–µ—Å—å —Ö–æ–ª–æ–¥–Ω—ã–º –º–æ—Ä–æ–∂–µ–Ω–Ω—ã–º –∏ –Ω–∞–ø–∏—Ç–∫–∞–º–∏ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∂–∞—Ä–∫–∏–º –¥–µ–Ω—å–∫–æ–º ‚òÄÔ∏è.</b>', parse_mode='HTML')
    if 20 > temperature >= 15:
        await callback.message.reply(f'<em>–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ.</em>\n\n'
                                    f'<b>–ù–∞ —É–ª–∏—Ü–µ —Ç–µ–ø–ª–æ, –æ–¥–Ω–∞–∫–æ –ø—Ä–∏ –≤–µ—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–≥–æ–¥–µ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ ‚ùÑÔ∏è.</b>\n'
                                    f'<b>–°–æ–≤–µ—Ç—É–µ–º –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –∫–æ—Ñ—Ç—É –∏ —à—Ç–∞–Ω—ã –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π ü•∂.</b>', parse_mode='HTML')
    if 15 > temperature >= 10:
        await callback.message.reply(f'<em>–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ.</em>\n\n'
                                    f'<b>–ù–∞ —É–ª–∏—Ü–µ –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ, —É–∂ —Ç–æ—á–Ω–æ –≤—Ä–µ–º—è –Ω–µ –¥–ª—è —à–æ—Ä—Ç —Å –º–∞–π–∫–æ–π üòÑ.</b>\n'
                                    f'<b>–°–æ–≤–µ—Ç—É–µ–º –Ω–∞–¥–µ—Ç—å —à—Ç–∞–Ω—ã –∏ –ª–µ–≥–∫—É—é –∫—É—Ä—Ç–∫—É-–≤–µ—Ç—Ä–æ–≤–∫—É –∞ —Ç–∞–∫–∂–µ –ª–µ–≥–∫—É—é —à–∞–ø–∫—É!</b>\n', parse_mode='HTML')
    if 10 > temperature >= 0:
        await callback.message.reply(f'<em>–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ.</em>\n\n'
                                    f'<b>–ù–∞ —É–ª–∏—Ü–µ —Ö–æ–ª–æ–¥–Ω–µ–µ —á–µ–º –æ–±—ã—á–Ω–æ, –ø–æ–≥–æ–¥–∞ –≤–µ—Å—å–º–∞ –æ–±–º–∞–Ω—á–∏–≤–∞ ‚òπÔ∏è.</b>\n'
                                    f'<b>–°–æ–≤–µ—Ç—É–µ–º –Ω–∞–¥–µ—Ç—å —à—Ç–∞–Ω—ã –∏ —à–∞–ø–∫—É –ø–æ—Ç–µ–ø–ª–µ–µ –∞ —Ç–∞–∫–∂–µ –ø–ª–æ—Ç–Ω—É—é –∫—É—Ä—Ç–∫—É –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–∏ –æ–±–º–æ—Ä–æ–∂–µ–Ω–∏—è.</b>\n'
                                    f'<b>–í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞—Ç—å –±–∞–±—É—à–∫–∏–Ω—ã –≤–∞—Ä–µ—à–∫–∏ üòÖ.</b>', parse_mode='HTML')
    if 0 > temperature >= -19:
        await callback.message.reply(f'<em>–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ.</em>\n\n'
                                    f'<b>–ù–∞ —É–ª–∏—Ü–µ —è–≤–Ω–∞—è –∑–∏–º–∞ ‚òÉÔ∏è.</b>\n'
                                    f'<b>–û–¥–µ–≤–∞–π—Ç–µ—Å—å –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ, —Ç–µ–ø–ª—ã–µ —à—Ç–∞–Ω—ã, —à–∞–ø–∫–∞ –∏ –≤–∞—Ä–µ–∂–∫–∏ - –≤–∞—à–∏ –ª—É—á—à–∏–µ –¥—Ä—É–∑—å—è!</b>\n', parse_mode='HTML')
    if -20 > temperature >= -30:
        await callback.message.reply(f'<em>–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ.</em>\n\n'
                                    f'<b>–ó–∞ –æ–∫–Ω–æ–º –ø–æ–ª–Ω–∞—è —Ç—É–Ω–¥—Ä–∞ ü•∂.</b>\n'
                                    f'<b>–°–æ–≤–µ—Ç—É–µ–º –≤–æ–∑–¥–µ—Ä–∂–∞—Ç—Å—è –æ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –≤—ã—Ö–æ–¥–æ–≤ –Ω–∞ —É–ª–∏—Ü—É –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–∏ –æ–±–º–æ—Ä–æ–∂–µ–Ω–∏–π!</b>\n'
                                    f'<b>–õ—É—á—à–µ –±—É–¥–µ—Ç –æ—Å—Ç–∞—Ç—Å—è –¥–æ–º–∞, —Å–º–æ—Ç—Ä–µ—Ç—å –ª—é–±–∏–º—ã–µ –≤–∏–¥–æ—Å–∏–∫–∏ –∏ –≥—Ä–µ—Ç—å—Å—è –ø–æ–ø–∏–≤–∞—è —á–∞–µ–∫ ‚òïÔ∏è.</b>', parse_mode='HTML')
    


###################################################################################################
# –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö –ö–û–ú–ê–ù–î–´ START
###################################################################################################


@dp.callback_query(F.data == 'popular')
async def popular_callback(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(f'–ù–∏–∂–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤–∞–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–æ–≤:', reply_markup=most_popular_city_kb)

@dp.callback_query(F.data == 'link')
async def link_callback(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.reply(f'–£–≤–∞–∂–∞–µ–º—ã–π –Ω–∞—à <b>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>, –≤ <em>–Ω–∞—à–µ–º –±–æ—Ç–µ</em> –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ –±–µ—Ä–µ—Ç—Å—è —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞ <a href="https://openweathermap.org">OpenWeatherMap</a> ‚õÖÔ∏è.\n–° –∏—Ö <b>API</b> –º—ã –ø–æ–ª—É—á–∞–µ–º <em>—Å–∞–º—ã–µ —Ç–æ—á–Ω—ã–µ —Å–≤–æ–¥–∫–∏</em> –æ <b>–ø–æ–≥–æ–¥–µ</b> —Ä–∞–¥—É—è –≤–∞—Å —Ç–æ—á–Ω—ã–º–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ üòò.', parse_mode='HTML')


@dp.callback_query(F.data == 'dp')
async def dp_callback(callback: CallbackQuery):
    # await callback.answer('')
    await callback.answer('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...', show_alert=True)



@dp.callback_query(F.data == 'message_weather')
async def start_subscription(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer('–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ...', show_alert=True)



###################################################################################################
# –ö–û–î –ó–ê–ü–£–°–ö–ê –ë–û–¢–ê
###################################################################################################

async def main():
    

    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('–†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞...')